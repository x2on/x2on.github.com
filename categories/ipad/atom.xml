<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iPad | x2on.de]]></title>
  <link href="http://x2on.github.com/categories/ipad/atom.xml" rel="self"/>
  <link href="http://x2on.github.com/"/>
  <updated>2014-05-07T16:29:56+02:00</updated>
  <id>http://x2on.github.com/</id>
  <author>
    <name><![CDATA[Felix Schulze]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Podcast: iOS backward compatibility]]></title>
    <link href="http://x2on.github.com/2013/09/26/ios-backward-compatibility-podcast/"/>
    <updated>2013-09-26T21:34:45+02:00</updated>
    <id>http://x2on.github.com/2013/09/26/ios-backward-compatibility-podcast</id>
    <content type="html"><![CDATA[<p><a href="http://heikobehrens.net/">Heiko Behrens</a> released his first podcast on UISprech talking with me about techniques for iOS development to check for versions, weak-linking, wrappers and adapters, various open-source libraries, approaches such as method swizzling and testing of compatibility.</p>

<!-- more -->


<p>Get it here (german): <a href="http://uisprech.de/1">http://uisprech.de/1</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why you should use Continuous Integration for iOS Development?]]></title>
    <link href="http://x2on.github.com/2013/01/24/why-you-should-use-continuous-integration-for-ios-development/"/>
    <updated>2013-01-24T22:34:00+01:00</updated>
    <id>http://x2on.github.com/2013/01/24/why-you-should-use-continuous-integration-for-ios-development</id>
    <content type="html"><![CDATA[<p><strong>Because every change in your code can break your app!</strong></p>

<!-- more -->


<p>Have a look at my slides from the <a href="http://www.b-mobile.info/2013/01/14/b-mobile-v-loc-at-yoc/">B-Mobile</a> event in January 2013 for a short introduction:</p>

<script async class="speakerdeck-embed" data-id="e55533b04b7d0130e2a022000a9f1069" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Weak delegate and OCMock]]></title>
    <link href="http://x2on.github.com/2012/07/11/weak-delegate-and-ocmock/"/>
    <updated>2012-07-11T17:09:00+02:00</updated>
    <id>http://x2on.github.com/2012/07/11/weak-delegate-and-ocmock</id>
    <content type="html"><![CDATA[<p>If you switch your Objective-C project to ARC or start a new project based on ARC you could use <code>__weak</code> delegates. But if you try to mock them with OCMock, it fails.</p>

<!-- more -->


<p><code>objective-c Normal Delegate Mock with OCMock (no __weak)
id someDelegateMock = [OCMockObject mockForProtocol:@protocol(SomeWeakDelegate)];
[[someDelegateMock expect] someDelegateCall:@"SomeString"]
someObject.delegate = someDelegateMock;
[someObject doSomethingWhichShouldCallTheDelegate];
STAssertNoThrow([someDelegateMock verify], @"expected delegate should be called");
</code>
A workaround for this is to create an <code>NSObject</code>, which implements the <code>__weak</code> delegate and use some properties to verify:</p>

<p>```objective-c Delegate Mock for weak delegate
@interface SomeDelegateMock : NSObject<SomeWeakDelegate>
@property (nonatomic, assign) BOOL someDelegateCalled;
@property (nonatomic, strong) NSString *someString;
@end</p>

<p>@implementation SomeDelegateMock
@synthesize someDelegateCalled = <em>someDelegateCalled;
@synthesize someString = </em>someString;</p>

<ul>
<li>(void) someDelegateCall:(NSString *)aString {
  self.someDelegateCalled = YES;
  self.someString = aString;
}</li>
</ul>


<p>@end
<code>
</code>objective-c Usage of the Delegate Mock
SomeDelegateMock *someDelegateMock = [SomeDelegateMock new];
someObject.delegate = someDelegateMock;
[someObject doSomethingToCallTheDelegate];
STAssertTrue(someDelegateMock.someDelegateCalled, @&ldquo;expected delegate should be called&rdquo;);
STAssertEqualObjects(someString, @&ldquo;SomeString&rdquo;, @&ldquo;expected delegate value&rdquo;);
<code>``
With this workaround you can test</code>__weak` delegates with OCMock.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[simple-share for iOS - A drop-in library for social share]]></title>
    <link href="http://x2on.github.com/2012/06/01/simple-share-for-ios-a-drop-in-library-for-social-share/"/>
    <updated>2012-06-01T20:19:30+02:00</updated>
    <id>http://x2on.github.com/2012/06/01/simple-share-for-ios-a-drop-in-library-for-social-share</id>
    <content type="html"><![CDATA[<p>There are a lot of social share libraries like <a href="http://getsharekit.com/">ShareKit</a>, but for my case they where too complicated to integrate or too big for my project. So i decided to build my own share library.</p>

<!-- more -->


<p>The current version supports:</p>

<ul>
<li>Facebook</li>
<li>Twitter (iOS 5)</li>
<li>Mail</li>
<li>Open in Safari</li>
</ul>


<p>The  static-library is very small and uses the original <a href="https://github.com/facebook/facebook-ios-sdk">facebook-for-ios</a> sdk from facebook.</p>

<p>For JSON it uses <a href="https://github.com/johnezang/JSONKit">JSONKit</a> instead of <a href="https://github.com/stig/json-framework">SBJSON</a> (with a little wrapper for the facebook-ios-sdk).</p>

<p>The library is licensed under Apache License 2.0 and you can get the source here:</p>

<p><a href="https://github.com/x2on/simple-share-ios">https://github.com/x2on/simple-share-ios</a></p>

<p>The project also includes a iOS demo application.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS-Libaries: cyrius-sasl, libetpan, expat, sksmtpmessage]]></title>
    <link href="http://x2on.github.com/2012/02/21/ios-libaries-cyrius-sasl-libetpan-expat-sksmtpmessage/"/>
    <updated>2012-02-21T17:33:58+01:00</updated>
    <id>http://x2on.github.com/2012/02/21/ios-libaries-cyrius-sasl-libetpan-expat-sksmtpmessage</id>
    <content type="html"><![CDATA[<p>I published some scripts and modifications to build the following libraries for the iOS-SDK:</p>

<ul>
<li>cyrius-sasl: <a href="https://github.com/x2on/cyrus-sasl-ios">https://github.com/x2on/cyrus-sasl-ios</a></li>
<li>expat: <a href="https://github.com/x2on/expat-ios">https://github.com/x2on/expat-ios</a></li>
<li>libetpan: <a href="https://github.com/x2on/libetpan">https://github.com/x2on/libetpan</a></li>
<li>sksmtpmessage: <a href="https://github.com/x2on/skpsmtpmessage">https://github.com/x2on/skpsmtpmessage</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
