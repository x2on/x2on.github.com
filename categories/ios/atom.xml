<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | x2on.de]]></title>
  <link href="http://x2on.github.com/categories/ios/atom.xml" rel="self"/>
  <link href="http://x2on.github.com/"/>
  <updated>2013-01-28T22:46:38+01:00</updated>
  <id>http://x2on.github.com/</id>
  <author>
    <name><![CDATA[Felix Schulze]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Weak delegate and OCMock]]></title>
    <link href="http://x2on.github.com/2012/07/11/weak-delegate-and-ocmock/"/>
    <updated>2012-07-11T17:09:00+02:00</updated>
    <id>http://x2on.github.com/2012/07/11/weak-delegate-and-ocmock</id>
    <content type="html"><![CDATA[<p>If you switch your Objective-C project to ARC or start a new project based on ARC you could use <code>__weak</code> delegates. But if you try to mock them with OCMock, it fails.</p>

<!-- more -->


<p><code>objective-c Normal Delegate Mock with OCMock (no __weak)
id someDelegateMock = [OCMockObject mockForProtocol:@protocol(SomeWeakDelegate)];
[[someDelegateMock expect] someDelegateCall:@"SomeString"]
someObject.delegate = someDelegateMock;
[someObject doSomethingWhichShouldCallTheDelegate];
STAssertNoThrow([someDelegateMock verify], @"expected delegate should be called");
</code>
A workaround for this is to create an <code>NSObject</code>, which implements the <code>__weak</code> delegate and use some properties to verify:</p>

<p>```objective-c Delegate Mock for weak delegate
@interface SomeDelegateMock : NSObject<SomeWeakDelegate>
@property (nonatomic, assign) BOOL someDelegateCalled;
@property (nonatomic, strong) NSString *someString;
@end</p>

<p>@implementation SomeDelegateMock
@synthesize someDelegateCalled = <em>someDelegateCalled;
@synthesize someString = </em>someString;</p>

<ul>
<li>(void) someDelegateCall:(NSString *)aString {
  self.someDelegateCalled = YES;
  self.someString = aString;
}</li>
</ul>


<p>@end
<code>
</code>objective-c Usage of the Delegate Mock
SomeDelegateMock *someDelegateMock = [SomeDelegateMock new];
someObject.delegate = someDelegateMock;
[someObject doSomethingToCallTheDelegate];
STAssertTrue(someDelegateMock.someDelegateCalled, @"expected delegate should be called");
STAssertEqualObjects(someString, @"SomeString", @"expected delegate value");
<code>``
With this workaround you can test</code>__weak` delegates with OCMock.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[simple-share for iOS - A drop-in library for social share]]></title>
    <link href="http://x2on.github.com/2012/06/01/simple-share-for-ios-a-drop-in-library-for-social-share/"/>
    <updated>2012-06-01T20:19:30+02:00</updated>
    <id>http://x2on.github.com/2012/06/01/simple-share-for-ios-a-drop-in-library-for-social-share</id>
    <content type="html"><![CDATA[<p>There are a lot of social share libraries like <a href="http://getsharekit.com/">ShareKit</a>, but for my case they where too complicated to integrate or too big for my project. So i decided to build my own share library.</p>

<!-- more -->


<p>The current version supports:</p>

<ul>
<li>Facebook</li>
<li>Twitter (iOS 5)</li>
<li>Mail</li>
<li>Open in Safari</li>
</ul>


<p>The  static-library is very small and uses the original <a href="https://github.com/facebook/facebook-ios-sdk">facebook-for-ios</a> sdk from facebook.</p>

<p>For JSON it uses <a href="https://github.com/johnezang/JSONKit">JSONKit</a> instead of <a href="https://github.com/stig/json-framework">SBJSON</a> (with a little wrapper for the facebook-ios-sdk).</p>

<p>The library is licensed under Apache License 2.0 and you can get the source here:</p>

<p><a href="https://github.com/x2on/simple-share-ios">https://github.com/x2on/simple-share-ios</a></p>

<p>The project also includes a iOS demo application.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS-Libaries: cyrius-sasl, libetpan, expat, sksmtpmessage]]></title>
    <link href="http://x2on.github.com/2012/02/21/ios-libaries-cyrius-sasl-libetpan-expat-sksmtpmessage/"/>
    <updated>2012-02-21T17:33:58+01:00</updated>
    <id>http://x2on.github.com/2012/02/21/ios-libaries-cyrius-sasl-libetpan-expat-sksmtpmessage</id>
    <content type="html"><![CDATA[<p>I published some scripts and modifications to build the following libraries for the iOS-SDK:</p>

<ul>
<li>cyrius-sasl: <a href="https://github.com/x2on/cyrus-sasl-ios">https://github.com/x2on/cyrus-sasl-ios</a></li>
<li>expat: <a href="https://github.com/x2on/expat-ios">https://github.com/x2on/expat-ios</a></li>
<li>libetpan: <a href="https://github.com/x2on/libetpan">https://github.com/x2on/libetpan</a></li>
<li>sksmtpmessage: <a href="https://github.com/x2on/skpsmtpmessage">https://github.com/x2on/skpsmtpmessage</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure-Mail is ready for download on Apple App Store]]></title>
    <link href="http://x2on.github.com/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store/"/>
    <updated>2011-04-28T07:29:14+02:00</updated>
    <id>http://x2on.github.com/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store</id>
    <content type="html"><![CDATA[<p>Secure-Mail is now ready for purchase on Apple App Store! The review process was sucessfully!</p>

<p>With Secure-Mail you can read and write email encrypted with S/MIME (Secure/Multipurpose Internet Mail Extensions) on iOS (iPhone, iPad and iPod Touch).</p>

<p><strong>You can find more details at <a href="http://www.secure-mail.me">www.secure-mail.me</a></strong></p>

<p><strong>Direct link to Secure-Mail on App Store: <a href="http://itunes.apple.com/us/app/secure-mail/id420919054?mt=8&amp;ls=1#">Secure-Mail App</a></strong></p>

<!--more-->


<p><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/1.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/1-159x300.png" alt="" /></a><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/2.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/2-159x300.png" alt="" /></a><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/3.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/3-159x300.png" alt="" /></a><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/4.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/4-159x300.png" alt="" /></a><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/5.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/5-159x300.png" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure-Mail: Waiting for Review]]></title>
    <link href="http://x2on.github.com/2011/04/24/secure-mail-waiting-for-review/"/>
    <updated>2011-04-24T17:30:29+02:00</updated>
    <id>http://x2on.github.com/2011/04/24/secure-mail-waiting-for-review</id>
    <content type="html"><![CDATA[<p>With Secure-Mail you can read S/MIME encrypted mails directly from Mail.app and send encrypted S/MIME mails with SMTP.</p>

<p>The Version 1.0 is now submitted to the App Store.
<strong>Current Status:</strong> Waiting for Review</p>

<p><strong>UPDATE 2011-04-28:</strong> The App is now ready for download: <a href="http://www.x2on.de/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store/">http://www.x2on.de/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store/</a></p>

<!--more-->


<p>Thanks for your help at the <a href="http://www.x2on.de/2011/04/01/secure-mail-beta-test-smime-on-ios-with-openssl/">beta-test</a>.</p>

<p><a href="http://www.x2on.de/wp-content/uploads/2011/04/Review.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/Review.png" alt="" /></a></p>

<h3>Some screenshot from the final 1.0:</h3>

<p><a href="http://www.x2on.de/wp-content/uploads/2011/04/1.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/1-159x300.png" alt="" /></a><a href="http://www.x2on.de/wp-content/uploads/2011/04/2.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/2-159x300.png" alt="" /></a><a href="http://www.x2on.de/wp-content/uploads/2011/04/3.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/3-159x300.png" alt="" /></a><a href="http://www.x2on.de/wp-content/uploads/2011/04/4.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/4-159x300.png" alt="" /></a><a href="http://www.x2on.de/wp-content/uploads/2011/04/5.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/5-159x300.png" alt="" /></a></p>
]]></content>
  </entry>
  
</feed>
