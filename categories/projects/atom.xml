<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Projects | x2on.de]]></title>
  <link href="http://x2on.github.com/categories/projects/atom.xml" rel="self"/>
  <link href="http://x2on.github.com/"/>
  <updated>2014-05-07T16:29:56+02:00</updated>
  <id>http://x2on.github.com/</id>
  <author>
    <name><![CDATA[Felix Schulze]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Secure-Mail is ready for download on Apple App Store]]></title>
    <link href="http://x2on.github.com/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store/"/>
    <updated>2011-04-28T07:29:14+02:00</updated>
    <id>http://x2on.github.com/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store</id>
    <content type="html"><![CDATA[<p>Secure-Mail is now ready for purchase on Apple App Store! The review process was sucessfully!</p>

<p>With Secure-Mail you can read and write email encrypted with S/MIME (Secure/Multipurpose Internet Mail Extensions) on iOS (iPhone, iPad and iPod Touch).</p>

<p><strong>You can find more details at <a href="http://www.secure-mail.me">www.secure-mail.me</a></strong></p>

<p><strong>Direct link to Secure-Mail on App Store: <a href="http://itunes.apple.com/us/app/secure-mail/id420919054?mt=8&amp;ls=1#">Secure-Mail App</a></strong></p>

<!--more-->


<p><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/1.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/1-159x300.png" alt="" /></a><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/2.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/2-159x300.png" alt="" /></a><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/3.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/3-159x300.png" alt="" /></a><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/4.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/4-159x300.png" alt="" /></a><a href="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/5.png"><img src="/images/2011-04-28-secure-mail-is-ready-for-download-on-apple-app-store/5-159x300.png" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure-Mail: Waiting for Review]]></title>
    <link href="http://x2on.github.com/2011/04/24/secure-mail-waiting-for-review/"/>
    <updated>2011-04-24T17:30:29+02:00</updated>
    <id>http://x2on.github.com/2011/04/24/secure-mail-waiting-for-review</id>
    <content type="html"><![CDATA[<p>With Secure-Mail you can read S/MIME encrypted mails directly from Mail.app and send encrypted S/MIME mails with SMTP.</p>

<p>The Version 1.0 is now submitted to the App Store.
<strong>Current Status:</strong> Waiting for Review</p>

<p><strong>UPDATE 2011-04-28:</strong> The App is now ready for download: <a href="http://www.x2on.de/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store/">http://www.x2on.de/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store/</a></p>

<!--more-->


<p>Thanks for your help at the <a href="http://www.x2on.de/2011/04/01/secure-mail-beta-test-smime-on-ios-with-openssl/">beta-test</a>.</p>

<p><a href="http://www.x2on.de/wp-content/uploads/2011/04/Review.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/Review.png" alt="" /></a></p>

<h3>Some screenshot from the final 1.0:</h3>

<p><a href="http://www.x2on.de/wp-content/uploads/2011/04/1.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/1-159x300.png" alt="" /></a><a href="http://www.x2on.de/wp-content/uploads/2011/04/2.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/2-159x300.png" alt="" /></a><a href="http://www.x2on.de/wp-content/uploads/2011/04/3.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/3-159x300.png" alt="" /></a><a href="http://www.x2on.de/wp-content/uploads/2011/04/4.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/4-159x300.png" alt="" /></a><a href="http://www.x2on.de/wp-content/uploads/2011/04/5.png"><img src="http://www.x2on.de/wp-content/uploads/2011/04/5-159x300.png" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure-Mail Beta Test - S/MIME on iOS with OpenSSL (UPDATE #3)]]></title>
    <link href="http://x2on.github.com/2011/04/01/secure-mail-beta-test-smime-on-ios-with-openssl/"/>
    <updated>2011-04-01T15:57:24+02:00</updated>
    <id>http://x2on.github.com/2011/04/01/secure-mail-beta-test-smime-on-ios-with-openssl</id>
    <content type="html"><![CDATA[<p>Im searching some people how want&rsquo;s to test Secure-Mail App.</p>

<p>With Secure-Mail you can read S/MIME encrypted mails directly from Mail.app and send encrypted S/MIME mails with SMTP.</p>

<!--more-->


<p>Please send me an email with some details about you, and why you wan&rsquo;t test the beta.</p>

<p><strong>2011-04-13: UPDATE #1:</strong> The Beta-Test is running now. At this time no new beta-testers are invited. Thanks for your help.</p>

<p><strong>2011-04-24: UPDATE #2:</strong> Waiting for review: <a href="http://www.x2on.de/2011/04/24/secure-mail-waiting-for-review/">http://www.x2on.de/2011/04/24/secure-mail-waiting-for-review/</a></p>

<p><strong>2011-04-28: UPDATE #3</strong> The App is now ready for download: <a href="http://www.x2on.de/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store/">http://www.x2on.de/2011/04/28/secure-mail-is-ready-for-download-on-apple-app-store/</a></p>

<p><strong>More details about Secure-Mail:</strong> <a href="http://www.x2on.de/2010/12/06/smime-on-ios-with-openssl-iphoneipad/">http://www.x2on.de/2010/12/06/smime-on-ios-with-openssl-iphoneipad/</a></p>

<p><a href="http://www.x2on.de/wp-content/uploads/2010/12/Screen2.png"><img src="http://www.x2on.de/wp-content/uploads/2010/12/Screen2-159x300.png" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial: Script for building OpenSSL for iOS (iPhone/iPad)]]></title>
    <link href="http://x2on.github.com/2010/12/16/tutorial-script-for-building-openssl-for-ios-iphoneipad/"/>
    <updated>2010-12-16T20:13:54+01:00</updated>
    <id>http://x2on.github.com/2010/12/16/tutorial-script-for-building-openssl-for-ios-iphoneipad</id>
    <content type="html"><![CDATA[<p>Related to my posts <a href="http://www.x2on.de/2010/02/01/tutorial-iphone-app-with-compiled-openssl-library/">http://www.x2on.de/2010/02/01/tutorial-iphone-app-with-compiled-openssl-library/</a> and <a href="http://www.x2on.de/2010/07/13/tutorial-iphone-app-with-compiled-openssl-1-0-0a-library/">http://www.x2on.de/2010/07/13/tutorial-iphone-app-with-compiled-openssl-1-0-0a-library/</a> i created a buildscript for building OpenSSL for iOS (iPhone/iPad).</p>

<!--more-->


<p>You can get it here: <a href="https://github.com/x2on/OpenSSL-for-iPhone/blob/master/build-libssl.sh">https://github.com/x2on/OpenSSL-for-iPhone/blob/master/build-libssl.sh</a></p>

<p><strong>Source:</strong>
<div><script src='https://gist.github.com/2962107.js'></script>
<noscript><pre><code>#!/bin/sh

#  Automatic build script for libssl and libcrypto 
#  for iPhoneOS and iPhoneSimulator
#
#  Created by Felix Schulze on 16.12.10.
#  Copyright 2010 Felix Schulze. All rights reserved.
#
#  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
###########################################################################
#  Change values here													  #
#																		  #
VERSION=&quot;1.0.0c&quot;													      #
SDKVERSION=&quot;4.2&quot;														  #
#																		  #
###########################################################################
#																		  #
# Don&#39;t change anything under this line!								  #
#																		  #
###########################################################################



CURRENTPATH=`pwd`

set -e
if [ ! -e openssl-${VERSION}.tar.gz ]; then
	echo &quot;Downloading openssl-${VERSION}.tar.gz&quot;
	curl -O http://www.openssl.org/source/openssl-${VERSION}.tar.gz
else
	echo &quot;Using openssl-${VERSION}.tar.gz&quot;
fi

mkdir -p &quot;${CURRENTPATH}/src&quot;
tar zxf openssl-${VERSION}.tar.gz -C &quot;${CURRENTPATH}/src&quot;
cd &quot;${CURRENTPATH}/src/openssl-${VERSION}&quot;

############
# iPhone Simulator
echo &quot;Building openssl for iPhoneSimulator ${SDKVERSION} i386&quot;
echo &quot;Please stand by...&quot;

export CC=&quot;/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin/gcc -arch i386&quot;
mkdir -p &quot;${CURRENTPATH}/bin/iPhoneSimulator${SDKVERSION}.sdk&quot;

LOG=&quot;${CURRENTPATH}/bin/iPhoneSimulator${SDKVERSION}.sdk/build-openssl-${VERSION}.log&quot;

./configure BSD-generic32 --openssldir=&quot;${CURRENTPATH}/bin/iPhoneSimulator${SDKVERSION}.sdk&quot; &gt; &quot;${LOG}&quot; 2&gt;&amp;1
# add -isysroot to CC=
sed -ie &quot;s!^CFLAG=!CFLAG=-isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator${SDKVERSION}.sdk !&quot; &quot;Makefile&quot;

make &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1
make install &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1
make clean &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1
#############

#############
# iPhoneOS armv6
echo &quot;Building openssl for iPhoneOS ${SDKVERSION} armv6&quot;
echo &quot;Please stand by...&quot;

export CC=&quot;/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/gcc -arch armv6&quot;
mkdir -p &quot;${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv6.sdk&quot;

LOG=&quot;${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv6.sdk/build-openssl-${VERSION}.log&quot;

./configure BSD-generic32 --openssldir=&quot;${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv6.sdk&quot; &gt; &quot;${LOG}&quot; 2&gt;&amp;1

sed -ie &quot;s!^CFLAG=!CFLAG=-isysroot /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS${SDKVERSION}.sdk !&quot; &quot;Makefile&quot;
# remove sig_atomic for iPhoneOS
sed -ie &quot;s!static volatile sig_atomic_t intr_signal;!static volatile intr_signal;!&quot; &quot;crypto/ui/ui_openssl.c&quot;

make &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1
make install &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1
make clean &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1
#############

#############
# iPhoneOS armv7
echo &quot;Building openssl for iPhoneOS ${SDKVERSION} armv7&quot;
echo &quot;Please stand by...&quot;

export CC=&quot;/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/gcc -arch armv7&quot;
mkdir -p &quot;${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv7.sdk&quot;

LOG=&quot;${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv7.sdk/build-openssl-${VERSION}.log&quot;


./configure BSD-generic32 --openssldir=&quot;${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv7.sdk&quot; &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1

sed -ie &quot;s!^CFLAG=!CFLAG=-isysroot /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS${SDKVERSION}.sdk !&quot; &quot;Makefile&quot;
# remove sig_atomic for iPhoneOS
sed -ie &quot;s!static volatile sig_atomic_t intr_signal;!static volatile intr_signal;!&quot; &quot;crypto/ui/ui_openssl.c&quot;

make &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1
make install &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1
make clean &gt;&gt; &quot;${LOG}&quot; 2&gt;&amp;1
#############

echo &quot;Build library...&quot;
lipo -create ${CURRENTPATH}/bin/iPhoneSimulator${SDKVERSION}.sdk/lib/libssl.a ${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv6.sdk/lib/libssl.a ${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv7.sdk/lib/libssl.a -output ${CURRENTPATH}/libssl.a

lipo -create ${CURRENTPATH}/bin/iPhoneSimulator${SDKVERSION}.sdk/lib/libcrypto.a ${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv6.sdk/lib/libcrypto.a ${CURRENTPATH}/bin/iPhoneOS${SDKVERSION}-armv7.sdk/lib/libcrypto.a -output ${CURRENTPATH}/libcrypto.a

mkdir -p ${CURRENTPATH}/include
cp -R ${CURRENTPATH}/bin/iPhoneSimulator${SDKVERSION}.sdk/include/openssl ${CURRENTPATH}/include/
echo &quot;Building done.&quot;
</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial: iPhone App with compiled OpenSSL 1.0.0a Library]]></title>
    <link href="http://x2on.github.com/2010/07/13/tutorial-iphone-app-with-compiled-openssl-1-0-0a-library/"/>
    <updated>2010-07-13T18:22:25+02:00</updated>
    <id>http://x2on.github.com/2010/07/13/tutorial-iphone-app-with-compiled-openssl-1-0-0a-library</id>
    <content type="html"><![CDATA[<p>This is a tutorial for using self-compiled builds of  the OpenSSL-library on the iPhone. You can build apps with XCode and the official SDK from Apple with this. I also made a small example-app for using the libraries with XCode and the iPhone/iPhone-Simulator. You can also download the precompiled OpenSSL-library (1.0.0a).</p>

<p>This tutorial works with OpenSSL 1.0.0a and Xcode 3.2.3 with iOS 4.</p>

<!--more-->


<p><strong>Update:</strong> Script for automatic building OpenSSL (currently 1.0.0d) for iOS: <a href="http://www.x2on.de/2010/12/16/tutorial-script-for-building-openssl-for-ios-iphoneipad/">http://www.x2on.de/2010/12/16/tutorial-script-for-building-openssl-for-ios-iphoneipad/</a></p>

<p>You can find the tutorial for OpenSSL 0.9.8 at <a href="http://www.x2on.de/2010/02/01/tutorial-iphone-app-with-compiled-openssl-library/">http://www.x2on.de/2010/02/01/tutorial-iphone-app-with-compiled-openssl-library/</a></p>

<p>You can get the Source of the example app with compiled OpenSSL at <a href="http://github.com/x2on/OpenSSL-for-iPhone">http://github.com/x2on/OpenSSL-for-iPhone</a></p>

<h3>Create OpenSSL Libary:</h3>

<p>Download OpenSSL Sourcecode</p>

<p>Change in crypto/ui/ui_openssl.c
<code>c    
static volatile sig_atomic_t intr_signal;
</code>
to
<code>c
static volatile int intr_signal;
</code></p>

<p>for preventing building error</p>

<h4>Build OpenSSL for i368 iPhoneSimulator:</h4>

<p><code>bash    
mkdir ssllibs
cd openssl-1.0.0a
mkdir openssl_armv6 openssl_armv7 openssl_i386
./configure BSD-generic32 --openssldir=/Users/&lt;username&gt;/openssl-1.0.0a/openssl_i386
</code></p>

<h5>Edit Makefile:</h5>

<p>Change <code>CC = cc</code> to:</p>

<p><code>make
CC= /Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin/gcc -arch i386
</code></p>

<p>Add as first item to <code>CFLAG</code>:
<code>make    
-isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator4.0.sdk
</code></p>

<h5>Build it:</h5>

<p><code>bash    
make
make install
</code></p>

<p>Your libcrypto.a and libssl.a are in the folder openssl_i368/lib</p>

<h4>Build OpenSSL for armv6 iOS:</h4>

<p><code>bash   
mv openssl_i386 ../ssllibs
make clean
./configure BSD-generic32 --openssldir=/Users/&lt;username&gt;/openssl-1.0.0a/openssl_armv6
</code></p>

<h5>Edit Makefile:</h5>

<p>Change <code>CC = cc</code> to:
<code>make    
CC= /Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/gcc -arch armv6
</code></p>

<p>Add as first item to <code>CFLAG</code>:
<code>make    
-isysroot /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS4.0.sdk
</code></p>

<h5>Build it:</h5>

<p><code>bash    
make
make install
</code></p>

<p>Your libcrypto.a and libssl.a are in the folder openssl_armv6/lib</p>

<h4>Build OpenSSL for armv7 iOS:</h4>

<p><code>bash
mv openssl_armv6 ../ssllibs
make clean
./configure BSD-generic32 --openssldir=/Users/&lt;username&gt;/openssl-1.0.0a/openssl_armv7
</code></p>

<h5>Edit Makefile:</h5>

<p>Change <code>CC = cc</code> to:</p>

<p><code>make    
CC= /Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/gcc -arch armv7
</code></p>

<p>Add as first item to <code>CFLAG</code>:</p>

<p><code>make    
-isysroot /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS4.0.sdk
</code></p>

<h5>Build it:</h5>

<p><code>bash    
make
make install
</code></p>

<p>Your libcrypto.a and libssl.a are in the folder openssl_armv7/lib</p>

<p>Create universal libs:</p>

<p><code>bash    
cp -r openssl_armv7/include ../ssllibs/
lipo -create ../ssllibs/openssl_i386/lib/libcrypto.a ../ssllibs/openssl_armv6/lib/libcrypto.a openssl_armv7/lib/libcrypto.a -output ../ssllibs/libcrypto.a
lipo -create ../ssllibs/openssl_i386/lib/libssl.a ../ssllibs/openssl_armv6/lib/libssl.a openssl_armv7/lib/libssl.a -output ../ssllibs/libssl.a
</code></p>

<h4>Edit your iPhone-XCode project:</h4>

<p>Copy the &ldquo;include&rdquo; folder from OpenSSL into your project-folder</p>

<p>Copy the libcrypto.a and libssl.a files into your project-folder</p>

<p>Drag the libcrypto.a and libssl.a files into your XCode Framework Folder-Tree</p>

<p>Open the Build-Info from your &ldquo;Target&rdquo; (Righclick on Target &ndash; Get Info)</p>

<p>Change <code>_Library Search Paths_</code> to</p>

<p><code>make
$(inherited) "$(SRCROOT)"
</code></p>

<p>Change <code>_User Header Search Paths_</code> to <code>_include_</code></p>

<p>Activate <code>_Always Search User Paths_</code></p>

<p><strong>Enjoy OpenSSL on the iPhone!</strong></p>

<p>I have made an iOS 3.2/4.0 XCode Project with OpenSSL 1.0.0a libaries. The examples uses the MD5-algorithm to calculate an md5 hash from an UITextfield.</p>

<p><strong>Download:</strong> <a href="http://github.com/x2on/OpenSSL-for-iPhone">http://github.com/x2on/OpenSSL-for-iPhone</a></p>

<p><strong>Disclaimer: Use this at your own risk.</strong></p>

<p><strong>Links: </strong></p>

<ul>
<li><a href="http://www.therareair.com/2009/01/01/tutorial-how-to-compile-openssl-for-the-iphone/">http://www.therareair.com/2009/01/01/tutorial-how-to-compile-openssl-for-the-iphone/</a></li>
<li><a href="http://www.openssl.org/">http://www.openssl.org/</a></li>
<li><a href="http://cocoawithlove.com/2009/06/base64-encoding-options-on-mac-and.html">http://cocoawithlove.com/2009/06/base64-encoding-options-on-mac-and.html</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
